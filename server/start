#!/bin/bash

# Container entry point.

OPT=${1:-update}

# Update parsl, desc-wfmon and desc-prod and then start the server.
if [ $OPT = update ]; then
  echo start: Updating parsl, desc-wfmon and desc-prod.
  pip install parsl@git+https://github.com/parsl/parsl@desc#parsl[monitoring,workqueue]
  pip install git+https://github.com/LSSTDESC/desc-wfmon.git
  cd /home/descprod/dev/desc-prod
  git pull
  cd /home/descprod
  /home/descprod/dev/desc-prod/server/start server
fi

# Link external drives.
EXTMNT=/mnt/dpvol01
EXTDIR=$HOME/data
LOGDIR=$EXTDIR/logs
if [ ! -r $EXTDIR ]; then
  if [ -r $EXTMNT ]; then
    echo start: Creating $EXTDIR 
    ln -s $EXTMNT $EXTDIR
  fi
  SITFIL=$EXTDIR/etc/site.txt
  if [ -r $SITFIL ]; then
    echo start: Site is $(cat $SITFIL)
  else
    echo start: ERROR: Site file not found: $SITFIL
    echo start: Please add this with a shot and unique site name.
  fi
  JIDFIL=$EXTDIR/etc/jobid.txt
  if [ ! -r $JIDFIL* ]; then
    echo start: WARNING: Creating missing job ID file: $JIDFIL
  fi
  echo start: Current/next job ID is $(cat $JIDFIL)
fi

# Startup config.
if [ ! -r $LOGDIR ]; then
  echo start: Creating log directory: $LOGDIR
  mkdir $LOGDIR
fi
echo $(date): $HOSTNAME >> $LOGDIR/host.log

# start the parsltest server
if [ $OPT = server ]; then
  echo start: Starting server.
  /home/descprod/dev/desc-prod/test/run-server
  echo start: Server exited.
  exit 0
fi

# Keep container open for shell exec.
if [ $OPT = wait ]; then
  echo start: Keeping container open.
  tail -f /dev/null
fi

echo start: Invalid option $OPT. Exiting.
