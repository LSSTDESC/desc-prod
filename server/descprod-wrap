#!/usr/bin/env python3

# descprod-wrap
#
# David Adams
# January 2023
#

wver = 14

import sys
import os
import time
import json
import subprocess

def get_progress_from_file():
    snam = f"current-status.txt"
    line = ''
    if os.path.isfile(snam):
        with open(snam) as sfil:
            for line in sfil: pass
    return line.strip()

jindent = 2
jsep = (',', ': ')

dohelp = len(sys.argv) > 1 and sys.argv[1] == '-h'
nargexp = 7
doerr = len(sys.argv) != nargexp
this = os.path.basename(sys.argv[0])

if dohelp:
    print(f"Usage: {this} COM RUNDIR LOGFIL STAFIL")
    print(f"  COM is a shell command line.")
    print(f"  RUNDIR is the directory where the command is run.")
    print(f"  LOGFIL has the stdout and stderr.")
    print(f"  STAFIL has the config info in json fomat.")
    print(f"The wrapper runs until the command completes.")
    print(f"During execution the config holds:")
    print(f"  command - COM")
    print(f"  run_directory - RUNDIR")
    print(f"  log_file - LOGFIL")
    print(f"  start_time - Start time")
    print(f"  pid - Process ID")
    print(f"After execution, it has the above plus:")
    print(f"  stop_time - Stop time")
    print(f"  return_status - Command return code")
    exit(0)

if doerr:
    print(f"Invalid arguments ({len(sys.argv)} != {nargexp}):")
    for arg in sys.argv:
        print(f"  {arg}")
    exit(1)

command = sys.argv[1]
rundir = sys.argv[2]
logname = sys.argv[3]
jnam = sys.argv[4]
jobid = int(sys.argv[5])
user = sys.argv[6]

if logname[0] != '/': logname = f"{rundir}/{logname}"
if jnam[0] != '/':    jnam    = f"{rundir}/{jnam}"

print(f"Running job {jobid} for user {user} in {rundir} with wrapper version {wver}")

logfil = open(logname, 'w')
info = {}
info['wrapper_version'] = wver
info['id'] = jobid
info['descname'] = user
info['command'] = command
info['run_directory'] = rundir
info['log_file'] = logname
info['start_time'] = int(time.time())
pop = subprocess.Popen(command, shell=True, cwd=rundir, stdout=logfil, stderr=logfil)
pid = pop.pid
info['pid'] = pid
with open(jnam, 'w') as jfil:
    json.dump(info, jfil, separators=jsep, indent=jindent)
    jfil.write('\n')
print(f"Config is in {jnam}")
wait_time = 10
rc = None
while True:
    rc = pop.poll()
    nowtime = int(time.time())
    prefix = 'Running'
    sep = '. '
    if rc is not None:
        info['stop_time'] = nowtime
        info['return_status'] = rc
        if rc < 0:
            prefix = f"Process received signal {-rc}"
        elif rc > 0:
            prefix = f"Failed"
        else:
            prefix = f"Done"
    info['update_time'] = nowtime
    progress = f"{prefix}{sep}{get_progress_from_file()}"
    if len(progress):
        info['progress'] = progress
    with open(jnam, 'w') as jfil:
        json.dump(info, jfil, separators=jsep, indent=jindent)
        jfil.write('\n')
    print(f"Updated config is in {jnam}")
    if rc is not None: exit(rc)
    time.sleep(wait_time)
