#!/bin/bash

# descprod-setup-ssh
#
# David Adams
# January 2023
#
# Generate an SSH key for a user in $HOME/.ssh/<username>_id_rsa
#
# After this is run for descprod and then a user, descprod can execute
# commands on behalf of USER with
#   ssh USER@localhost -i $HOME/.ssh/descprod_id_rsa -q date

USER=${1:-$(whoami)}
if [ $USER = -h ]; then
  echo Usage: $THIS [username]
  echo "  Default is current user"
  exit 0
fi
HOMDIR=$(eval echo ~$USER)
if [ ${HOMDIR:0:1} = '~' ]; then
  echo User not found: $USER
  exit 1
fi
if [ ! -r $HOMDIR ]; then
  echo User $USER home directory not found: $HOMDIR
  exit 2
fi
SSHDIR=$HOMDIR/.ssh
echo Setting up ssh for $USER at $SSHDIR

# Check and create the ssh direcctory.
if [ -r $SSHDIR ]; then
  if [ $USER = descprod ]; then
    echo The ssh directory for $USER already exists: $SSHDIR
    echo Delete it before running this command.
    echo But think first: this will prevent descprod from running on behalf of
    echo "users (including root) who have registered the current descprod key."
    exit 4
  else
    echo "Removing the current ssh directory: $SSHDIR."
    rm -rf $SSHDIR
  fi
fi
if [ ! -r $SSHDIR ]; then
  mkdir $SSHDIR
  chmod 700 $SSHDIR
fi

# Generate the key for this user.
echo Generating ssh key for $USER.
SSHFIL=$SSHDIR/${USER}_id_rsa
ssh-keygen -b 2048 -t rsa -f $SSHFIL -q -N ''

# Create config
CFGFIL=$SSHDIR/config
THIS=$(basename $0)
rm -f $CFGFIL
echo "# This file generated automatically by $THIS" > $CFGFIL
echo "# Changes will be discarded next time the script is run." >>$CFGFIL
echo "# Generated at $(date)" >>$CFGFIL
echo "#" >>$CFGFIL
echo 'StrictHostKeyChecking no   # Remove new key warning/prompt' >>$CFGFIL
echo 'PasswordAuthentication no  # No ssh password authentication' >>$CFGFIL

# Locate the key for descprod.
KEYFIL=$(eval echo ~descprod/.ssh/descprod_id_rsa.pub)
if [ ! -r $KEYFIL ]; then
  echo Key for descprod not found at: $KEYFIL
  echo Please run $THIS for descprod to generate that file before
  echo running it for any other user.
  exit 3
fi

# Copy descprod key to authorized keys.
AUTFIL=$SSHDIR/authorized_keys
if [ -r $KEYFIL ]; then
  echo Registering ssh key for descprod.
  cat $KEYFIL >>$AUTFIL
else
  echo Unable to give ssh access to descprod.
  echo File not found: $KEYFIL
fi
