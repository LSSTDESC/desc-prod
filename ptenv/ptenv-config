#!/bin/bash

# ptenv-config

# Check if this script is being sourced.
(return 0 2>/dev/null) &&  _sourced=true || _sourced=false

# First argument is the requested version [none/current].
if $_sourced; then
  export PTENV_VERSION=${1:-none}
else
  export PTENV_VERSION=${1:-${PTENV_VERSION:-none}}
fi

# Set the config using the requested version.
if [ PTENV_VERSION = -h ]; then
  echo Usage: $0 VER
  echo "  to display the configuration for version VER, or"
  echo Usage: . $0 VER
  echo "  to set the configuration for version VER."
  PTENV_VERSION=
elif [ $PTENV_VERSION == 00 ]; then
  PTENV_PYTHON=3.9.12
  PTENV_NDCCTOOLS=7.4.15
  PTENV_PARSL=desc
  PTENV_DESCWFMON=
elif [ $PTENV_VERSION == 01 ]; then
  PTENV_PYTHON=3.9.12
  PTENV_NDCCTOOLS=7.4.14
  PTENV_PARSL=6c46a2bde02e9027d0fc33aee5596eda2e253ce9    # 1.3.0-dev+desc-2022.11.15a
  PTENV_DESCWFMON=
elif [ $PTENV_VERSION == 02 ]; then
  PTENV_PYTHON=3.9.12
  PTENV_NDCCTOOLS=7.4.14
  PTENV_PARSL=f4f5326c9b17325ddc2c70b649b47f4f70d4716d    # 1.3.0-dev+desc-2022.11.30a (I hope)
  PTENV_DESCWFMON=
elif [ $PTENV_VERSION != none ]; then
  echo ptenv-config: ERROR: Invalid version: $PTENV_VERSION
  PTENV_VERSION=
fi

if $_sourced; then
  echo ptenv-config: This script is being sourced
  if [ -n "$PTENV_VERSION" -a "$PTENV_VERSION" != none ]; then
    export PTENV_VERSION
    export PTENV_PYTHON
    export PTENV_NDCCTOOLS
    export PTENV_PARSL
    export PTENV_DESCWFMON
  fi
else
  echo ptenv-config: This script is not being sourced
  if [ -n "$PTENV_VERSION" -a "$PTENV_VERSION" != none ]; then
    echo "    PTENV_VERSION: $PTENV_VERSION"
    echo "     PTENV_PYTHON: $PTENV_PYTHON"
    echo "  PTENV_NDCCTOOLS: $PTENV_NDCCTOOLS"
    echo "      PTENV_PARSL: $PTENV_PARSL"
    echo "  PTENV_DESCWFMON: $PTENV_DESCWFMON"
  fi
fi
