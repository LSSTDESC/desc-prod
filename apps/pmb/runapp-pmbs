#!/usr/bin/env python3

# runapp-pmb
#
# David Adams
# April 2023
#
# Descprod application wrapper pmbs for pmb.
# Usage runapp-pmbs NAME CONFIG HOWFIG
#     NAME - The final descprod application name.
#   CONFIG - The config for that application
#   HOWFIG - The howfig (how configuration)
# The howfig is a series of dash-separated fields. The first of these must begin
# with "pmb-" 

import os
import sys
import json
import subprocess

# Update the status messgae sent back to the server.
def report_status(msg, rc=0):
    sfilnam = 'current-status.txt'
    with open(sfilnam, 'w') as sfil:
        if rc:
            pfx = f"ERROR {rc}"
        else:
            pfx = "STATUS"
        print(f"runapp_pbms: {pfx}: {msg}")
        sfil.write(f"{msg}\n")

def runit(com, errmsg):
    print()
    print(f"Running command: {com}")
    res = subprocess.run(com, shell=True, capture_output=True)
    rc = res.returncode
    sout = res.stdout.decode().strip()
    serr = res.stderr.decode().strip()
    print(f"Command returned status {rc}.")
    line = '=========================================='
    print(line)
    if len(sout): print(sout)
    print(line)
    if len(serr): print(serr)
    print(line)
    if rc:
        report_status(errmsg, rc)
        exit(rc)
    return sout

this = os.path.basename(sys.argv[0])

stalog='current-status.txt'

def myexit(rc, msg):
    report_status(msg, rc)
    exit(rc)

jmap = json.load(open('config.json'))
jid = int(jmap["id"])
jobtype = jmap['jobtype']
config  = jmap['config']
howfig  = jmap['howfig']

# pmb* may not be used as a job type.
if jobtype[0:3] == 'pmb':
    myexit(21, f"Forbidden job type: {jobtype}.")

ipos = howfig.find(',')
if ipos < 0:
    pmbcfg = howfig
    howrem = ''
else:
    pmbcfg = howfig[0:ipos]
    howrem = howfig[ipos+1:]

# This script expect the first howfig to be of type pmbs.
if pmbcfg[0:5] != 'pmbs-':
    myexit(22, f"Unexpected howfig: {pmbcfg}")

pmbcfg = f"pmb-{pmbcfg[5:]}"

sjfnam = 'subjob-config.json'
sout = runit(f"descprod-add-job -p {jid} -o {sjfnam} {jobtype} {config} {howrem}", "Add job failed.")
fil = open(sjfnam)
sjmap = json.load(fil)
fil.close()
sjid = sjmap["id"]
report_status(f"Created and submitting job {sjid}.")

runit(f"pmb-submit {pmbcfg} descprod-start-job -w {sjid}", "Batch submission of {sjid} failed.")
report_status(f"Submitted job {sjid} to batch queue.")
